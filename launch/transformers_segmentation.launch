<?xml version="1.0" encoding="UTF-8" ?>
<launch>
    <arg name="mask_topic"              default="/segmentation"/>
    <arg name="orig_topic"              default="/orig_image"/>
    <arg name="use_depth"               default="True"/>
    <arg name="use_crop"                default="True"/>
    <arg name="random_crop"             default="True"/>
    <!-- <arg name="crop_edges"              default='[[0.25, 0.35, 0.75, 0.95], [0.1, 0.45, 0.9, 0.9]]'/> -->
    <arg name="crop_edges"              default='[[0.0, 0.1, 0.5, 1.0], [0.5, 0.1, 1.0, 1.0]]'/>
    <!-- To use the flip of the image to create the mask -->
    <arg name="use_flip"                default="True"/>
    <!-- Use dynamic (not implemented yet) is used to change the cropping dynamicly using the previous mask "" -->
    <arg name="use_dynamic"             default="True"/>
    <!-- The function to use to merge the masks possible functions("And", "Or", "Confidence") -->
    <arg name="merge_crops_func"        default="And"/>
    <!-- The number of the crops to use when using random cropping set to 0 if just flipping is needed -->
    <arg name="num_of_crops"            default="0"/>

    <!-- For Trans2Seg model (Transformers) -->
    <arg name="model_name"              default="Trans2Seg"/>
    <arg name="ckpt_name"               default="trans2seg_model.pth"/>
    <arg name="ckpt_path"               default="/demo"/>
    <arg name="config_path"             default="/configs/Trans2Seg/trans2seg_medium_all_sber.yaml"/>
    <arg name="list_of_classes"         default='["Mirror", "Glass", "Floor Under Obstacles", "Floor", "Other Reflective Surfaces"]'/>
    <!-- For TransLab -->
    <!-- <arg name="model_name"              default="TransLab"/>
    <arg name="ckpt_name"               default="translab_model.pth"/>
    <arg name="config_path"             default="/configs/TransLab/translab_bs4.yaml.yaml"/> 
    <arg name="list_of_classes"         default="[All_Optical, Floor]"/> -->
    <!--______________-->

    <arg name="image_topics"            default="[/camera_gl_rs/color/image_raw]"/>
    <arg name="depth_topics"            default="[/camera_gl_rs/aligned_depth_to_color/image_raw]"/> 

    <!-- <arg name="image_topics"            default="[/camera_gl_zed/zed_node/rgb/image_rect_color]"/>
    <arg name="depth_topics"            default="[/camera_gl_zed/zed_node/depth/depth_registered]"/>  -->
    <arg name="root_dir"                default="$(dirname)/../src"/>
    
    <node pkg="transformers_semantic_ros" type="transformers_semantic_node" name="transformers_semantic_node" output="screen" clear_params="true">
        <param name="mask_topic"            value="$(arg mask_topic)"/>
        <param name="orig_topic"            value="$(arg orig_topic)"/>
        <param name="model_name"            value="$(arg model_name)"/>
        <param name="ckpt_name"             value="$(arg ckpt_name)"/>
        <param name="ckpt_path"             value="$(arg ckpt_path)"/>
        <param name="config_path"           value="$(arg config_path)"/>
        <param name="use_depth"             value="$(arg use_depth)"/>
        <param name="use_crop"              value="$(arg use_crop)"/>
        <param name="random_crop"           value="$(arg random_crop)"/>
        <param name="use_flip"              value="$(arg use_flip)"/>
        <param name="use_dynamic"           value="$(arg use_dynamic)"/>
        <param name="merge_crops_func"      value="$(arg merge_crops_func)"/>
        <param name="num_of_crops"          value="$(arg num_of_crops)"/>
        <param name="root_dir"              value="$(arg root_dir)"/>
        <rosparam param="list_of_classes" subst_value="True">$(arg list_of_classes)</rosparam>
        <rosparam param="image_topics" subst_value="True">$(arg image_topics)</rosparam>
        <rosparam param="depth_topics" subst_value="True">$(arg depth_topics)</rosparam>
        <rosparam param="crop_edges" subst_value="True">$(arg crop_edges)</rosparam>
    </node>
</launch>